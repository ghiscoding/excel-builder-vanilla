import { createExcelFileStream, createWorkbook, Drawings, Picture, Table } from 'excel-builder-vanilla';

import './example13.scss';

export default class Example {
  exportBtnElm!: HTMLButtonElement;
  githubLogoBase64 =
    '';

  mount() {
    this.exportBtnElm = document.querySelector('#export') as HTMLButtonElement;
    this.exportBtnElm.addEventListener('click', this.startProcess.bind(this));
    document.querySelector<HTMLImageElement>('#pic1')!.src = `data:image/png;base64,${this.githubLogoBase64}`;
  }

  unmount() {
    this.exportBtnElm.removeEventListener('click', this.startProcess.bind(this));
  }

  async startProcess() {
    const workbook = createWorkbook();
    const worksheet = workbook.createWorksheet({ name: 'TestSheet' });

    const originalData = [
      ['Artist', 'Album', 'Price'],
      ['Buckethead', 'Albino Slug', 8.99],
      ['Buckethead', 'Electric Tears', 13.99],
      ['Buckethead', 'Colma', 11.34],
      ['Crystal Method', 'Vegas', 10.54],
      ['Crystal Method', 'Tweekend', 10.64],
      ['Crystal Method', 'Divided By Night', 8.99],
    ];

    const albumTable = new Table();
    albumTable.styleInfo.themeStyle = 'TableStyleDark2';
    albumTable.setReferenceRange([1, 1], [3, originalData.length]);
    albumTable.setTableColumns(['Artist', 'Album', 'Price']);

    worksheet.sheetView.showGridLines = false;
    worksheet.setData(originalData);
    workbook.addWorksheet(worksheet);

    worksheet.addTable(albumTable);
    workbook.addTable(albumTable);

    const drawings = new Drawings();
    const picRef = workbook.addMedia('image', 'logo.png', this.githubLogoBase64);
    const picture = new Picture();
    picture.createAnchor('twoCellAnchor', {
      from: {
        x: 5,
        y: 2,
      },
      to: {
        x: 7,
        y: 8,
      },
    });

    picture.setMedia(picRef);
    drawings.addDrawing(picture);
    worksheet.addDrawings(drawings);
    workbook.addDrawings(drawings);

    // Streaming export
    const stream = createExcelFileStream(workbook, { chunkSize: 1024 });
    const chunks: Uint8Array[] = [];
    for await (const chunk of stream as AsyncIterable<Uint8Array>) {
      chunks.push(chunk);
    }
    const blob = new Blob(chunks as BlobPart[], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'Fruits-Streaming.xlsx';
    a.click();
    URL.revokeObjectURL(url);
  }
}
